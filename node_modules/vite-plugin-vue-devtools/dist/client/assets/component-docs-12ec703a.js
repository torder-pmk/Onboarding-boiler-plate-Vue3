import { v as defineComponent, cc as useColorMode, a$ as ref, a1 as computed, by as watch, o as openBlock, e as createElementBlock, x as createBaseVNode, u as createVNode, z as unref, aC as isRef, h as withCtx, F as Fragment, i as renderList, d as withDirectives, bv as vShow, q as normalizeClass, l as normalizeStyle, ci as rpc, _ as __unplugin_components_7, y as toDisplayString } from './index-36a8f2c8.js';
import { _ as _sfc_main$1 } from './TextInput.vue_vue_type_script_setup_true_lang-3d5cce68.js';
import { g, M } from './splitpanes.es-025c37b2.js';
import { F as Fuse } from './fuse.esm-c317b696.js';
import { U as Uu } from './jse-theme-dark-2b1853c1.js';

const _hoisted_1 = {
  relative: "",
  "h-full": "",
  "of-hidden": "",
  "n-panel-grids": ""
};
const _hoisted_2 = {
  border: "b base",
  flex: "~ col gap1",
  px4: "",
  py3: "",
  "navbar-glass": ""
};
const _hoisted_3 = {
  "h-full": "",
  "select-none": "",
  "overflow-scroll": "",
  "p-2": "",
  class: "no-scrollbar"
};
const _hoisted_4 = { key: 0 };
const _hoisted_5 = ["onClick"];
const _hoisted_6 = {
  key: 1,
  "h-full": "",
  flex: "",
  "items-center": "",
  "justify-center": ""
};
const _hoisted_7 = /* @__PURE__ */ createBaseVNode("h1", {
  "text-sm": "",
  italic: "",
  op50: ""
}, " No Files ", -1);
const _hoisted_8 = {
  "h-full": "",
  "select-none": "",
  "overflow-scroll": "",
  "p-2": "",
  class: "no-scrollbar"
};
const _hoisted_9 = {
  "h-full": "",
  flex: "",
  "items-center": "",
  "justify-center": ""
};
const _hoisted_10 = /* @__PURE__ */ createBaseVNode("h1", {
  "text-sm": "",
  italic: "",
  op50: ""
}, " No Data ", -1);
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "component-docs",
  setup(__props) {
    const colorMode = useColorMode();
    const keywords = ref("");
    const activeFileIndex = ref(0);
    const files = ref([]);
    const content = ref({});
    const list = computed(() => {
      const fuse = new Fuse(files.value, {
        shouldSort: true
      });
      const result = keywords.value ? fuse.search(keywords.value).map((i) => i.item) : files.value || [];
      return result;
    });
    async function getFileList() {
      files.value = await rpc.getVueSFCList();
      getComponentInfo();
    }
    async function getComponentInfo() {
      if (!list.value.length)
        return;
      const info = await rpc.getComponentInfo(list.value[activeFileIndex.value]);
      content.value = info;
    }
    function toggle(index) {
      activeFileIndex.value = index;
      getComponentInfo();
    }
    getFileList();
    watch(keywords, () => {
      activeFileIndex.value = 0;
      getComponentInfo();
    });
    return (_ctx, _cache) => {
      const _component_VDTextInput = _sfc_main$1;
      const _component_VDCard = __unplugin_components_7;
      return openBlock(), createElementBlock("div", _hoisted_1, [
        createBaseVNode("div", _hoisted_2, [
          createVNode(_component_VDTextInput, {
            modelValue: unref(keywords),
            "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => isRef(keywords) ? keywords.value = $event : null),
            "font-mono": "",
            icon: "carbon:search",
            placeholder: "Filter Files",
            op50: ""
          }, null, 8, ["modelValue"])
        ]),
        createVNode(unref(M), {
          style: normalizeStyle({ height: "calc(100% - 60px)" })
        }, {
          default: withCtx(() => [
            createVNode(unref(g), { border: "r base" }, {
              default: withCtx(() => [
                createBaseVNode("div", _hoisted_3, [
                  unref(list).length ? (openBlock(), createElementBlock("ul", _hoisted_4, [
                    (openBlock(true), createElementBlock(Fragment, null, renderList(unref(list), (file, index) => {
                      return openBlock(), createElementBlock("li", {
                        key: index,
                        class: normalizeClass([unref(activeFileIndex) === index ? "op100" : "op60"]),
                        hover: "op100",
                        "h-8": "",
                        "cursor-pointer": "",
                        "of-hidden": "",
                        "text-ellipsis": "",
                        "lh-8": "",
                        onClick: ($event) => toggle(index)
                      }, toDisplayString(file), 11, _hoisted_5);
                    }), 128))
                  ])) : (openBlock(), createElementBlock("div", _hoisted_6, [
                    createVNode(_component_VDCard, {
                      flex: "~ col gap2",
                      "min-w-30": "",
                      "items-center": "",
                      p3: ""
                    }, {
                      default: withCtx(() => [
                        _hoisted_7
                      ]),
                      _: 1
                    })
                  ]))
                ])
              ]),
              _: 1
            }),
            createVNode(unref(g), null, {
              default: withCtx(() => [
                createBaseVNode("div", _hoisted_8, [
                  withDirectives(createVNode(unref(Uu), {
                    modelValue: unref(content),
                    "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => isRef(content) ? content.value = $event : null),
                    "h-full": "",
                    class: normalizeClass(["json-editor-vue", [
                      unref(colorMode) === "dark" ? "jse-theme-dark" : ""
                    ]]),
                    "main-menu-bar": false,
                    "navigation-bar": false,
                    "status-bar": false,
                    "read-only": true,
                    indentation: 2,
                    "tab-size": 2
                  }, null, 8, ["modelValue", "class"]), [
                    [vShow, unref(list).length]
                  ]),
                  withDirectives(createBaseVNode("div", _hoisted_9, [
                    createVNode(_component_VDCard, {
                      flex: "~ col gap2",
                      "min-w-30": "",
                      "items-center": "",
                      p3: ""
                    }, {
                      default: withCtx(() => [
                        _hoisted_10
                      ]),
                      _: 1
                    })
                  ], 512), [
                    [vShow, !unref(list).length]
                  ])
                ])
              ]),
              _: 1
            })
          ]),
          _: 1
        }, 8, ["style"])
      ]);
    };
  }
});

/* Injected with object hook! */

/* Injected with object hook! */

export { _sfc_main as default };
